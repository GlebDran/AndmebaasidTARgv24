-----------TRIGERID ---------

CREATE database trigerTARgv24;
use trigerTARgv24;
Create table linnad(
linnID int PRIMARY KEY IDENTITY(1,1),
linnanimi varchar(15) not null,
rahvaarv int);

Create table logi(
id int PRIMARY KEY IDENTITY(1,1),
aeg DATETIME,
toiming  varchar(100),
andmed TEXT
)
--INSERT TRIGER jälgib andmete sisestamine tabelis linnad ja teeb vastava kirje tabelis LOGI
CREATE TRIGGER linnaLisamine
ON linnad --tabelinimi, mis on vaja jälgida
FOR INSERT
AS
INSERT INTO logi(aeg, toiming, andmed) --getdate v aeg, 'tehtud insert käsk v toiming', ...
SELECT 
GETDATE(),'on tehtud insert käsk', inserted.linnanimi FROM inserted;

--trigeri tegevuse kontroll
INSERT INTO linnad(linnanimi, rahvaarv)
VALUES('Tallinn', 600000);
SELECT * FROM linnad;
SELECT * FROM logi;

-ИЗМЕНИТЬ ТРИГГЕР, ПРАВОЙ КНОПКОЙ НА НЕГО - MODIFY - 

ALTER TRIGGER [dbo].[linnaLisamine]
ON [dbo].[linnad] --tabelinimi, mis on vaja jälgida
FOR INSERT
AS
INSERT INTO logi(aeg, toiming, andmed) --getdate v aeg, 'tehtud insert käsk v toiming', ...
SELECT 
GETDATE(),'on tehtud insert käsk', 
CONCAT('linn: ', inserted.linnanimi, ', elanike arv: ', inserted.rahvaarv) -CONCAT()- объединение данных из нескольких полей
FROM inserted;

----вносим SUSER (kasutaja)---

ALTER TRIGGER [dbo].[linnaLisamine]
ON [dbo].[linnad] --tabelinimi, mis on vaja jälgida
FOR INSERT
AS
INSERT INTO logi(kasutaja, aeg, toiming, andmed) --getdate v aeg, 'tehtud insert käsk v toiming', ...
SELECT
SUSER_NAME(), --USER на уровне БД / SUSER global кто залогинен 
GETDATE(),'on tehtud insert käsk', 
CONCAT('linn: ', inserted.linnanimi, ', elanike arv: ', inserted.rahvaarv)
FROM inserted;

--------------DELETE TRIGER ----------------

CREATE TRIGGER linnaKustutamine
ON linnad --tabelinimi, mis on vaja jälgida
FOR DELETE
AS
INSERT INTO logi(kasutaja, aeg, toiming, andmed) --getdate v aeg, 'tehtud insert käsk v toiming', ...
SELECT
SUSER_NAME(), --USER на уровне БД / SUSER global кто залогинен 
GETDATE(),'DELETE käsk', 
CONCAT('linn: ', deleted.linnanimi, ', elanike arv: ', deleted.rahvaarv)
FROM deleted;

--KONTROLL--
DELETE FROM linnad
WHERE linnID=1;
SELECT * FROM linnad;
SELECT * FROM logi;

----- UUENDAMINE -------

CREATE TRIGGER linnaUuendamine
ON linnad --tabelinimi, mis on vaja jälgida
FOR UPDATE
AS
INSERT INTO logi(kasutaja, aeg, toiming, andmed) --getdate v aeg, 'tehtud insert käsk v toiming', ...
SELECT
SUSER_NAME(), --USER на уровне БД / SUSER global кто залогинен 
GETDATE(),'UPDATE käsk', 
CONCAT('vanad andmed -linn: ', deleted.linnanimi, ', elanike arv: ', deleted.rahvaarv,'uued andmed -linn: ', inserted.linnanimi, ', elanike arv: ', inserted.rahvaarv)
FROM deleted
INNER JOIN inserted
ON deleted.linnID=inserted.linnID;

--KONTROLL--
UPDATE linnad SET rahvaarv=2500
WHERE linnID=3;
SELECT * FROM linnad;
SELECT * FROM logi;

------ОТОБРАЗИТЬ СОХРАНЕННЫЕ ТРИГГЕРЫ ------

SELECT
name,
is_instead_of_trigger
FROM
sys.triggers
WHERE
type='TR'
